<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.micah.system.mapper.SysUserMapper">

    <resultMap id="baseUserMap" type="org.micah.model.SysUser">
        <id property="id" column="user_id"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatarName" column="avatar_name"/>
        <result property="avatarPath" column="avatar_path"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <result property="enabled" column="enabled"/>
        <result property="password" column="password"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="phone" column="phone"/>
        <result property="username" column="username"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="createTime" column="create_time"/>
        <result property="createBy" column="create_by"/>
        <result property="pwdResetTime" column="pwd_reset_time"/>
    </resultMap>
    <resultMap id="sysUserMap" extends="baseUserMap" type="org.micah.model.SysUser">
        <association property="dept" javaType="org.micah.model.Dept">
            <id property="id" column="dept_id"/>
            <result property="name" column="dept_name"/>
        </association>
        <collection property="roles" ofType="org.micah.model.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="level" column="level"/>
            <result property="dataScope" column="data_scope"/>
        </collection>
        <collection property="jobs" ofType="org.micah.model.Job">
            <id property="id" column="job_id"/>
            <result property="name" column="job_name"/>
        </collection>
    </resultMap>

    <resultMap id="userWithRoleMap" extends="baseUserMap" type="org.micah.model.SysUser">
        <collection property="roles" ofType="org.micah.model.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="level" column="level"/>
            <result property="dataScope" column="data_scope"/>
        </collection>
    </resultMap>

    <resultMap id="userDetailsMap" type="org.micah.model.dto.UserSmallDto">
        <id property="id" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="enabled" column="enabled"/>
        <collection property="permissions" column="permissions" ofType="java.lang.String">
            <constructor>
                <arg column="permissions"/>
            </constructor>
        </collection>
        <collection property="roleNames" column="role_name" ofType="java.lang.String">
            <constructor>
                <arg column="role_name"/>
            </constructor>
        </collection>
    </resultMap>
    <sql id="baseUserSql">
        ${property}.user_id,
        ${property}.username,
        ${property}.password,
        ${property}.nick_name,
        ${property}.gender,
        ${property}.phone,
        ${property}.email,
        ${property}.avatar_name,
        ${property}.avatar_path,
        ${property}.password,
        ${property}.is_admin,
        ${property}.enabled,
        ${property}.create_by,
        ${property}.update_by,
        ${property}.pwd_reset_time,
        ${property}.create_time,
        ${property}.update_time,
    </sql>

    <sql id="selectAllSql">
        select
               <include refid="baseUserSql">
                   <property name="property" value="sys_user"/>
               </include>
               sj.job_id,
               sj.name AS job_name,
               sr.role_id,
               sr.name AS role_name,
               sr.level,
               sr.data_scope,
               sd.dept_id,
               sd.name AS dept_name
        FROM (sys_user,sys_dept sd)
                 LEFT JOIN sys_users_jobs suj ON sys_user.user_id = suj.user_id
                 LEFT JOIN sys_job sj ON suj.job_id = sj.job_id
                 LEFT JOIN sys_users_roles sur ON sys_user.user_id = sur.user_id
                 LEFT JOIN sys_role sr ON sur.role_id = sr.role_id
        WHERE (sd.dept_id = sys_user.dept_id)
    </sql>

    <sql id="selectUserWithRole">
        select
               <include refid="baseUserSql">
                   <property name="property" value="sys_user"/>
               </include>
               sr.role_id,
               sr.name as role_name,
               sr.level,
               sr.data_scope
        from sys_user
                 left join sys_users_roles sur on sys_user.user_id = sur.user_id
                 left join sys_role sr on sur.role_id = sr.role_id
    </sql>

    <select id="queryAll" resultMap="sysUserMap">
        <include refid="selectAllSql"/>
        <if test="ew != null">
            and ${ew.sqlSegment}
        </if>
    </select>

    <select id="queryAllWithPage" resultMap="sysUserMap">
        <include refid="selectAllSql"/>
        <if test="ew != null">
            and ${ew.sqlSegment}
        </if>
    </select>

    <select id="getById" resultMap="sysUserMap">
        <include refid="selectAllSql"/>
        and sys_user.user_id = #{id}
    </select>

    <select id="queryByUsername" resultMap="userWithRoleMap">
        <include refid="selectUserWithRole"/>
        where sys_user.username = #{username}
    </select>

    <select id="queryByMenuId" resultMap="baseUserMap">
        select
        <include refid="baseUserSql">
            <property name="property" value="sr"/>
        </include>
        from sys_user su
        left join sys_users_roles sur on su.user_id = sur.user_id
        left join sys_roles_menus srm on sur.role_id = srm.role_id
        where srm.menu_id = #{id}
    </select>

    <select id="getUserDetails" resultMap="userDetailsMap">
        select su.user_id,
               su.username,
               su.password,
               su.enabled,
               sr.name as role_name,
               sm.permission as permissions
        from sys_user su
                 left join sys_users_roles sur on su.user_id = sur.user_id
                 left join sys_role sr on sur.role_id = sr.role_id
                 left join sys_roles_menus srm on sur.role_id = srm.role_id
                 left join sys_menu sm on srm.menu_id = sm.menu_id
        where su.username = #{username};
    </select>
</mapper>