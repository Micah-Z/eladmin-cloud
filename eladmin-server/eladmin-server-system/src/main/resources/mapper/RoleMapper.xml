<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.micah.system.mapper.RoleMapper">

    <resultMap id="roleBaseMap" type="org.micah.model.Role">
        <id property="id" column="role_id"/>
        <result property="name" column="role_name"/>
        <result property="level" column="level"/>
        <result property="dataScope" column="data_scope"/>
        <result property="createBy" column="role_create_by"/>
        <result property="createTime" column="role_create_time"/>
        <result property="updateBy" column="role_update_by"/>
        <result property="updateTime" column="role_update_time"/>
        <result property="description" column="description"/>
    </resultMap>
    <resultMap id="resultWithMenuAndDept" extends="roleBaseMap" type="org.micah.model.Role">
        <collection property="menus" resultMap="org.micah.system.mapper.MenuMapper.menuBaseMap"/>
        <collection property="depts" resultMap="org.micah.system.mapper.DeptMapper.deptBaseMap"/>
    </resultMap>
    <select id="findByUserId" resultType="org.micah.model.Role">
        select sr.role_id as id,
               sr.name,
               sr.level,
               sr.data_scope
        from sys_role sr
                 left join sys_users_roles sur on sr.role_id = sur.role_id
        where sur.user_id = #{currentUserId}
    </select>

    <sql id="roleSql">
               ${property}.role_id,
               ${property}.name as role_name,
               ${property}.level,
               ${property}.description,
               ${property}.data_scope,
               ${property}.create_by as role_create_by,
               ${property}.update_by as role_update_by,
               ${property}.create_time as role_create_time,
               ${property}.update_time as role_update_time
    </sql>

    <sql id="selectAllSql">
        <include refid="roleSql">
            <property name="property" value="sys_role"/>
        </include>
        ,
        <include refid="org.micah.system.mapper.MenuMapper.menuSql">
            <property name="property" value="sm"/>
        </include>,
        <include refid="org.micah.system.mapper.DeptMapper.deptSql">
            <property name="property" value="sd"/>
        </include>
        from sys_role
        left join sys_roles_menus srm on sys_role.role_id = srm.role_id
        left join sys_menu sm on srm.menu_id = sm.menu_id
        left join sys_roles_depts srd on sys_role.role_id = srd.role_id
        left join sys_dept sd on srd.dept_id = sd.dept_id
    </sql>

    <select id="queryAllByPage" resultMap="resultWithMenuAndDept">
        select
        <include refid="selectAllSql"/>
        <if test="ew!=null">
            <where>
                ${ew.sqlSegment}
            </where>
        </if>
    </select>
    <select id="queryAll" resultMap="resultWithMenuAndDept">
        select
        <include refid="selectAllSql"/>
        <if test="ew!=null">
            <where>
                ${ew.sqlSegment}
            </where>
        </if>
    </select>
    <select id="findById" resultMap="resultWithMenuAndDept">
        select
        <include refid="selectAllSql"/>
        <if test="id != null">
            <where>
                sys_role.role_id = #{id}
            </where>
        </if>
    </select>

    <select id="findInMenuId" resultMap="roleBaseMap">
        select
        <include refid="roleSql">
            <property name="property" value="sr"/>
        </include>
        from sys_role sr left join sys_roles_menus srm on sr.role_id = srm.role_id
        <where>
            srm.menu_id in
            <if test="menuIds != null">
                <foreach collection="menuIds" item="menuId" separator="," open="(" close=")">
                    #{menuId}
                </foreach>
            </if>
        </where>

    </select>
</mapper>